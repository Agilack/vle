VLE 0.8.7
=========

* command line interface:
  * add test command on package: It not possible to use a command $vle -P
    pkg-name test in order to launch unit test. This patch has been done to do
    so. The object Package.cpp Package.hpp are impacted by this. A function
    test() has been added to the singleton Package. Several update are done to
    add this feature in gvle.

* extension:
  * fsa:
    * fix unit test in Statechart: without Boost::pool, the Statechart unit-test
      failed. We fix the initialization of some variables and remove a conflict
      between an enumeration and attribute variable.

* gvle:
 * fix the Gtk::TextView log scroll: The default behavior of the Gtk::TextView
   log (shows the results of configure, build, test, clean and package commands)
   is not effective. It does not scroll across the entire buffer. This patch
   uses the Gtk::TextBuffer::Mark to store the last line changed and uses this
   Mark to scroll effectively the Gtk::TextView.
 * add a test command into the GVLE project menu.

* oov
  * add a on-the-fly output stream. By default, the oov file plug-in can only
    use standard output at the end of the simulation. This approach cancels the
    possibility of using tools which draws on-the-fly for instance Gnuplot with
    scripts. We add a new oov plug-in which flush observation directly on the
    standard output stream. The last line is used to show the column's name.
    Parameters are:
    - locale: used C by default, but can use the user's locale (`user') or a
      specified locale (fr_FR).
    - julian-day: to show a second column of time with a conversion of the
      time into a julian date.
    - header: to show (by default, header is hide) in the latest line of the
      observation.

* template:
  * add unit test for the default template: This patch adds the unit tests
    functionality to the template package.

* win32:
  * fix a bad word in the OOV file description: Replacement of the String
    "Output For VLE" by "Output Of VLE" for the file /share/oov.rc.in.


VLE 0.8.6
=========

* extension:
  * difference equation:
    * fix bug on generic model: When an external event occurs on SEND_INIT or
      POST_SEND_INIT, the exception on "invalid variable name" is raised.
    * fix bug on init process: When an external variable have several values
      for its initialization, the initExternalVariable method is invoked
      several times.

* vpz:
  * fix bad reading of value::Matrix parameters: The sax reader reads badly the
    value::Matrix parameters rowstep and columnstep.


VLE 0.8.5
=========

* command line interface:
  * fix conflict in cli with multiple vpz: When starting a simulation with a vpz
    (in CLI), if a vpz file exists in the current directory and a file exists in
    exp directory of the package, by default, the priority is set on the current
    file. We change the behavior by throwing a exception in this case.

* graph:
  * fix cloning connections for coupledmodels: The algorithm to copy connections
    for coupled models computes bad connections for input and output connections
    when the coupled model have the same name than one of its sub-models
    (closes: #3011555).

* extension:
  * difference equation:
    * assign zero to all variable: By default, the class extension::Var does not
     initialise the value (a double). Consequences, if the user does not
     initialize his variables, the simulations are not reproducibles. Fix the
     constructor of extension::Var to assign 0.0 by default.

* oov:
  * add a dummy plug-in which does nothing: Views can be specific to model use
    (ie. a view dedicated to sensitivity analysis). It could be handy to
    temporary "deactivate" other views so that they not produce outputs (files
    or storage objects) when working with a specific view (closes: #3016973).

* utils:
  * add time in vle.log header: The `vle.log' file, generated during
    simulations, provides only the current date of simulation `yyyy-mmm-dd' and
    not the hour in its header.

* value:
  * fix value::Matrix constructor: One of the value::Matrix constructor
    initialise badly the size of the matrix. By default, it assigns a null size
    whatever the parameters.

* vpz:
  * fix double representation when writing on steam: By default, the
   vpz::write(std::ostream& out) function does not use the correct parameters to
   show a correct representation of the double type. We fix it by adding before
   flushing the Vpz data.


VLE 0.8.4
=========

* devs:
  To allow a better debugging, add a function allowing to store or dump a valid
  XML VPZ stream from the API of devs::Executive. (Closes: #3006604).
    void devs::Executive::dump(std::ostream& out) const;

* extension:
  * difference equation:
    When a model connected to a generic DifferenceEquation model is removed,
    the number of connected models isn't updated correctly if some models have
    send your value.


VLE 0.8.3
=========

* utils:
  fix isValidYear when negative applied date:
    isValidYear has now a supplementary control, in order to check for example
    if a date can be build from a negative value.

* manager:
  * Thread manager is limited to one run: to avoid risky reinitialisation, the
    start method of a ManagerRunThread object can be now called only once.
    Concatenating simulation of plans require the building of new
    ManagerRunThread objects.

* gvle:
  * Modeling plugin:
    Petrinet: Add Petri net modeling plug-in, the code, the input/output ports
    and observables ared generated.
  * Bugs:
    * Set Experiment duration to a non null value: In order to prevent bad VPZs,
      the duration is now set up to 1.0 (m_duration is now set to 1.0, instead
      of 0.0).
    * Rename a tab of the Atomic Model window: The tab of the window "Atomic
      Model" which has for title "Views" becomes the tab of the "Observables".
    * Update contributors: 3 authors have been added inside the gvle.glade file.
    * Load VPZ tree when using command line: When opening a VPZ in command line
      mode, the tree representation of the VPZ was NOT shown (but it was when
      using "File/Open Global VPZ").
    * Add shortcuts to menu items: Four shortcuts have been added inside the
      GVLEMenuAndToolbar.cpp file:
      In the "Project" menu:
      * Configure Project item: (Ctrl g)
      * Build Project item: (Ctrl b)
      And in the "Edit"menu:
      * Annuler item: (Ctrl z)
      * RÃ©tablir item: (Ctrl y)
    * Fix empty error message when loading invalid VPZ When a invalid VPZ was
      loaded, an empty error message was displayed.
    * Add convert from locale encoding to UTF-8: When a non UTF-8 file is
      loaded, the GUI try to convert the file from the locale encoding of the
      user.

* translator:
  * Add graph builder: Add a graph translator which builds the structure of a
    model from an adjacency matrix and a list of classes


VLE 0.8.2
=========

* project:
  * vle: fix cflags include directories in pc files: In the same version of VLE
    (ie. same major and minor version, only the patch changes), we do not modify
    the paths of include directories.

* extension:
  * difference equation: fix bug on dynamic creation and history: When a coupled
    model is created dynamically and it have several atomic models based on
    DifferenceEquation extension, if an atomic model have a history, this
    history goes out the coupled model and it is possible that an atomic model
    is running and receive this history. This case proceed a bug (an exception).

* manager:
  * fix the way to stop threads: In multi threading (JustRunThread,
    ManagerRunThread, SimulatorDistant), when the threads were stopped, delete
    functions were called on Mutex objects that yielded to segmentation fault.

* gvle:
  * Modeling plugin:
    * FSA: Add fsa modeling plug-in for Statechart, the code, the input/output
      ports and observables are generated. The conditions are generated because
      the Statechart extension doesn't need specific conditions.
    * Difference Equation: add the generation of observables.


VLE 0.8.1
=========

* project:
  * vle: fix patch in the same version of VLE:
      In the same version of VLE (ie. same major and minor version, only the
      patch changes), we do not modify the paths of share, include and modules
      directories.

* extension:
  * decision: move unittest of decision in correct namespace:
      The namespace 'ex' is used instead of a classical
      'vle::extension::decisio Replace the current namespace.


* devs:
  * fix crash with empty vpz instance:
      If an empty vpz (file or instance) is used to start a simulation, a
      segmentation fault occurred. This patch fix the problem by checking the
      vp before launching the simulation.
  * fix addConnection function in Executive:
      When we try to build an internal connection between an atomic model and a
      coupled moddel, an exception is raised. (Closes: #2971825).


VLE 0.8.0
=========

Switch to the package system.

* project:
  * Add the Gettext functionality.
  * Update the soversion of dynamic libraries: (libvleutils.so.0.8 to
    libvleutils-0.8.so.0).
  * To simplify the source, we add the boost::filesystem (and boost::system for
    Boost >= 1.35) to the vle dependencies and we remove all references to the
    Glib fileutils functions.
  * To manage the date correctly, we append the boost::date_time library to the
    vle dependencies.
  * Remove Assert and Throw macros from the API to remove conflict with the C
    API of scripting language like Python.
  * Remove the libxml++ dependency and replace it with the libxml2.
    * Update the SaxParser with the new libxml2 sax parser.
    * Move the configuration from the host.xml file to the vle.conf.
  * Add cross compilation system:
     * update all API with the Win32 export symbols methods
       __delspec(dllexport) and __delspec(dllimport) to allow the use of new
       compiler and cross compilation.

* vle:
  * Update the path management in VLE:
    - Remove all environment variables: VLE_SIMULATOR_PATH, VLE_OOV_PATH,
      VLE_MODEL_PATH. Replace these variables by a new one: VLE_HOME. This
      variable defines the home of models, simulators, packages and other
      plug-ins of VLE. If this variable is not defined, the $HOME/.vle or
      %HOMEDRIVE%%HOMEPATH%/vle is used.
    - Remove optional path and program option from vle, eov, etc.
  * Add the packaging system:
    - Add packages functions in utils::Path class to manage the directories of
      packages in the VLE_HOME path.
    - Add a Package class to list the available package in VLE_HOME, create a
      new empty package, configure, build and install package.
    - Reduce the number of class to manage the command line interface.
    - Add the -P or --package parameter to the command line interface to
      select current package to edit.
    - Add depends between package with 'package' attribute into the vpz dynamic
      element. It allows to make link from a package to a another dynamics of a
      another package.
      - Change the VPZ format: add a 'package' attribute into the vpz dynamic
        element.
      - Break API of vle::devs::Dynamics classes by changing constructors.
  * Change the VPZ format: replace the #PCDATA by vle::value in the vpz
    format and build a new DTD (vle-0.8.0.dtd).
  * Add a 'begin' attribute into the vpz tag 'experiment' to start the
    simulation at any time. Update the DTD (vle-0.8.0.dtd) with this new
    attribute.
  * Update the MatrixTranslator with value instead of XML.
  * Add a Julian date class into libutils to convert string, double into year,
    month, day, hour, minutes, seconds.
  * Remove the libvledata library, no user, old code and perhaps a problem of
    license.
  * Remove the Simpson class in libvleutils library. Use GSL or Boost instead.
  * The routing of external events follows an algorithm based on routing
    table and cache.
  * Add a new Debug system.
  * Update the API of devs::Executive.

* extension:
  * Update difference equation (see. changelog).
  * Add the finite state automata extension with Moore, Mealy, FDDevs and
    StateShart formalism.
  * Add the decision, an extension to build a graph of activities based on
    temporal, precedence and conditional constraints.
  * Add debug system for extension.

* manager:
  * Store combinations inputs of experimentales frames into Manager classes.
    User can access to the condition produce by ExperimentGenerator.

* gvle:
  * Big update, see changelog for the details.
    * New conditions plug-ins management.
    * New outputs plug-ins management.
    * New modeling plug-ins management.
    * Merge all Gtk::Window into an only Gtk::Window.
    * Update GVLE to manage source code of VLE packages.
    * Add the Gtksourceviewmm library to show text, c++, cmake files.

* oov:
  * SimpleFile, the super class of txt, rdata, csv plug-ins, can now use the
    standard output and error and can be configured to select localized value.
  * Update oov plug-ins parametrization function from XML to value.


VLE 0.7.2
=========

* vle:
  * Fix important bug in confluent function: a bug overrides the possibilities
    to call the internal transition before the external transition.


VLE 0.7.1
=========

* vle:
  * Fix crash in ExperimentGenerator with empty condition list.

* win32:
  * Fix a bad environment variable for Boost 1.38


VLE 0.7.0
=========

* vle:
  * Remove the boost shared pointer around value::Value. This change break API
    for the observation function in the devs::Dynamics class.
  * Optimise the allocation / deallocation of the objects from class
    vle::value::Value using the boost pool memory allocation. This change
    improve simulation by 10 or 20%.
  * Add serialization function in class vle::value::Value. This change
    allow the building of binary stream between component Eov - Vle and for the
    next DEVS kernel with parallelization base on thread and MPI.
  * Change the pseudo random generator Glib::Rand to the boost::mersenne19937.
  * Update differential equation order 1
  * Update difference equation: new clearly syntax and improve speed for a
    common API.
  * Clean the API of the devs::Executive class. Break completely API
    for models based on this class (translators and classical models).

* eov:
  * Remove the XML stream by the new binary stream provides by the value::Value
    library.
  * Change behaviours of the Eov and Oov with graphics outputs plug-ins:
    - Eov and Oov can now produces png files.
    - Eov provides a newly thread system that correct bugs on Win32 port.
  * Add a new visualization graph plug-in.

* win32 :
  * Use the newly Boost 1.38 libraries.
  * Use the Gtkmm 2.14 libraries.
  * Build chm files instead of classical doxygen html files.



VLE 0.6.2
=========

* vle:
  * Bug fix.



VLE 0.6.1
=========

* vle:
  * Big fix in PetriNet.
  * Bug fix.

* gvle:
  * Show the filename into windows title.
  * Bug fix.



VLE 0.6.0
=========

* project:
  * Merge repository of vle, gvle, eov and examples.
  * Use CPack to build Debian, RPM and Win32 packages.
  * Add soversion to the dynamic libraries.

* vle:
  * Add a command line option -i or --infos to show the set of paths used by
    the project.
  * Add DifferenceEquation DEVS extension.
  * Update PetriNet DEVS extension.
  * Update DifferencialEquation DEVS extension.
  * Add DESS extension with Runge Kutta (order 4) and Euler.

* gvle:
  * Improve the usability of the GUI.

* rvle:
  * Add two function to manage the seed of the simulation.

* eov:
  * Remove the daemon mode.



VLE 0.5.2
=========

* vle:
  * Add environment variable to manage the paths of plug-ins:
    VLE_SIMULATOR_PATH, VLE_OOV_PATH, VLE_MODEL_PATH.
  * Bug fix.



VLE 0.5.1
=========

* vle:
  * Add method for the GVLE application.
  * Bug fix.

* gvle:
  * First release.
  * Bug fix.



VLE 0.5.0
=========

* project:
  * Switch the VLE application to GPL v3.0.

* vle:
  * Add an API to get results of simulations by using a special plug-in
    called 'storage'. This function allows a complete use of scripting language
    like R, Python.
  * Update the API of the translator library.
  * Add a finish view to get results only at the end of a simulation.
  * Add multiples conditions for atomic model.
  * Update the API of the devs::Dynamic class:
     - change processInitEvent to constructor.
     - change processExternalEvent to externalTransition which receives the
       lists of external events.
     - change getOutputFunction to output.
     - remove the parseXML function. Use the InitEventList now.
     - simplify confluentTransitions which merge with externalTransition and a
       confluentTransition.
  * Add a new value XML.
  * Update algorithms in libgraph to improve speed of events routing.
  * Change values from objects to the boost shared pointer.
  * Clean source code: delete sModel and sCoupledModel and rename sAtomicModel
    to simulator, simulator to coordinator and coordinator to root-coordinator.
  * Add the possibility to develop multiples dynamics into the same dynamic
    library (.so, .dll, .dylib) by using a new macro DECLARE_NAMED_DYNAMICS.
  * Change the VPZ format and add a dtd.
  * Change the XML format between eov / vle.

* oov:
  * Add a new library 'liboov'.
  * Add a new plug-in 'storage' to store result in memory.
  * Add an API to develop Cairo oov plug-ins.

* rvle:
  * Add R package.
