INCLUDE_DIRECTORIES(
  ${VLE_BINARY_DIR}/src
  ${VLE_SOURCE_DIR}/src
  ${Boost_INCLUDE_DIRS}
  ${GLIBMM_INCLUDE_DIRS}
  ${LIBXML_INCLUDE_DIRS})

LINK_DIRECTORIES(
  ${GLIBMM_LIBRARY_DIRS}
  ${LIBXML_LIBRARY_DIR}
  ${Boost_LIBRARY_DIRS})

IF(WIN32)
  ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/vfl.o
    COMMAND /usr/bin/i586-mingw32msvc-windres
    -I${CMAKE_BINARY_DIR}/share
    -i${CMAKE_BINARY_DIR}/share/vfl.rc
    -o${CMAKE_CURRENT_BINARY_DIR}/vfl.o)
  SET(OS_SPECIFIC_PATH_IMPL PathWin32.cpp ${CMAKE_CURRENT_BINARY_DIR}/vfl.o)
ELSE(WIN32)
  SET(OS_SPECIFIC_PATH_IMPL PathUnix.cpp)
ENDIF(WIN32)

SET(UTILS_CPP DateTime.cpp Host.cpp Package.cpp PackageTable.cpp Path.cpp
  Preferences.cpp Rand.cpp Socket.cpp SocketImpl.c Template.cpp Tools.cpp
  Trace.cpp ${OS_SPECIFIC_PATH_IMPL})

SET(UTILS_HPP Algo.hpp DateTime.hpp Debug.hpp DllDefines.hpp Exception.hpp
  Host.hpp i18n.hpp Package.hpp PackageTable.hpp Path.hpp Pool.hpp
  Preferences.hpp Rand.hpp Socket.hpp Template.hpp Tools.hpp Trace.hpp)

ADD_LIBRARY(vleutils SHARED ${UTILS_CPP};${UTILS_HPP})

SET_TARGET_PROPERTIES(vleutils PROPERTIES ${VLE_LIBRARY_PROPERTIES})
SET_TARGET_PROPERTIES(vleutils PROPERTIES OUTPUT_NAME
  "vleutils-${VLE_VERSION_SHORT}")

TARGET_LINK_LIBRARIES(vleutils
  ${GLIBMM_LIBRARIES}
  ${LIBXML_LIBRARIES}
  ${GTHREAD_LIBRARIES}
  ${Boost_FILESYSTEM_LIBRARY}
  ${Boost_SYSTEM_LIBRARY}
  ${Boost_DATE_TIME_LIBRARY}
  ${Boost_REGEX_LIBRARY}
  ${OS_SPECIFIC_LIBRARIES})

INSTALL(TARGETS vleutils
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib)

INSTALL(FILES ${UTILS_HPP} DESTINATION ${VLE_INCLUDE_DIRS}/utils)

IF (HAVE_UNITTESTFRAMEWORK)
  ADD_SUBDIRECTORY(test)
ENDIF (HAVE_UNITTESTFRAMEWORK)
