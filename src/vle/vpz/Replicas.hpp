/** 
 * @file vpz/Replicas.hpp
 * @brief 
 * @author The vle Development Team
 * @date mar, 31 jan 2006 17:18:23 +0100
 */

/*
 * Copyright (C) 2006 - The vle Development Team
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

#ifndef VLE_VPZ_REPLICAS_HPP
#define VLE_VPZ_REPLICAS_HPP

#include <vector>
#include <glib/gtypes.h>
#include <vle/vpz/Base.hpp>

namespace vle { namespace vpz {

    /** 
     * @brief This class allow load and writing REPLICAS tag into project file
     * VPZ.
     */
    class Replicas : public Base
    {
    public:
        Replicas();

        virtual ~Replicas() { }

        virtual void write(std::ostream& out) const;

        virtual Base::type getType() const
        { return REPLICAS; }

        /** 
         * @brief Build the list of seed using parameter provide by XML or by
         * specialized functions, setRandom, setEnumerate or setList.
         * 
         * @return a vector of seed.
         */
        inline const std::vector < guint32 >& getList() const
        { return m_list; }

        /** 
         * @brief Delete all number generated by getList.
         */
        void clear();

        /** 
         * @brief Get the current seed system.
         * 
         * @return Seed.
         */
        inline guint32 seed() const
        { return m_seed; }

        /** 
         * @brief Set he current seed system.
         * 
         * @param seed 
         * 
         * @return 
         */
        inline void setSeed(const guint32 seed)
        { m_seed = seed; buildList(); }

        /** 
         * @brief Get the number of replicas.
         * 
         * @return Number of replicas.
         */
        inline size_t number() const
        { return m_number; }

        /** 
         * @brief Set the number of replicas.
         * 
         * @param number of replicas.
         */
        inline void setNumber(const size_t number)
        { m_number = number; buildList(); }

    private:
        /** 
         * @brief Build the vector of value.
         */
        void buildList();

        size_t                  m_number;
        guint32                 m_seed;
        std::vector < guint32 > m_list;
    };

}} // namespace vle vpz

#endif
